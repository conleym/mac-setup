---
- hosts: localhost
  become: no
  vars_files:
    - vars/const.yml
    - vars/dmgs.yml
    - vars/fonts.yml
    - vars/launchd.yml
    - vars/mas.yml
    - vars/pip.yml
    - vars/ports.yml
    - vars/versions.yml
  tasks:
    - import_tasks: tasks/preliminaries.yml
      tags:
        - always

    # Do this early, as we rely on the presence of certain modules (e.g., macholib) later.
    - import_tasks: tasks/pip.yml
      tags:
        - pip

    # See https://unix.stackexchange.com/questions/234104/get-osx-codename-from-command-line
    - name: Determine OS version
      command: sw_vers -productVersion
      register: sw_vers_stdout
      tags:
        - ports

    - set_fact:
        macos_version: "{{ sw_vers_stdout.stdout }}"
        macos_major_version: "{{ sw_vers_stdout.stdout | regex_replace('^(10\\.\\d+).*', '\\1') }}"
      tags:
        - ports

    - name: Determine marketing version
      shell: >-
        awk '/SOFTWARE LICENSE AGREEMENT FOR (macOS|OS X)/' '/System/Library/CoreServices/Setup Assistant.app/Contents/Resources/en.lproj/OSXSoftwareLicense.rtf' |
        awk -F '(macOS|OS X)' '{ print $NF }' |
        awk '{ gsub(/^[^a-zA-Z]*|[^a-zA-Z]*$/, ""); print }'
      register: awk_stdout
      tags:
        - ports

    - set_fact:
        macos_marketing_version: "{{ awk_stdout.stdout }}"
      tags:
        - ports

    - include_role:
        name: macports
        apply:
          tags:
            - ports
      tags:
        - ports

    - import_tasks: tasks/install_ports.yml
      tags:
        - ports

    - include_role:
        name: mactex
        apply:
          tags:
            - tex
      tags:
        - tex

    - import_tasks: tasks/install_apps.yml
      tags:
        - apps

    - include_role:
        name: virtualbox
        apply:
          tags:
            - apps
      tags:
        - apps
      when: ansible_architecture == arch_intel

    - name: Install node.js with nvm
      include_role:
        name: node
        apply:
          tags:
            - node
      tags:
        - node

    - name: Clone oh my zsh
      git:
        repo: https://github.com/ohmyzsh/ohmyzsh
        dest: "{{  '~/.zsh/ohmyzsh' | expanduser }}"
      tags:
        - dotfiles

    - name: Clone dotfiles
      git:
        repo: git@github.com:conleym/dotfiles.git
        dest: "{{  '~/.cfg' | expanduser }}"
        bare: yes
      tags:
        - dotfiles

    - name: Check out dotfiles
      command: "git --git-dir={{ '~/.cfg' | expanduser }} --work-tree={{ '~' | expanduser }} checkout"
      tags:
        - dotfiles

    - name: Clone .emacs.d
      git:
        repo: git@github.com:conleym/dot-emacs.git
        dest: "{{ '~/.emacs.d' | expanduser }}"
      tags:
        - emacs
        - dotfiles

    - name: Install Emacs
      include_role:
        name: emacs
        apply:
          tags:
            - emacs
      tags:
        - emacs

    - import_tasks: tasks/launchd_load.yml
      tags:
        - launchd

    - name: Show ~/Library
      command: chflags nohidden "{{ '~/Library' | expanduser }}"
      tags:
        - customize

    - name: No, really, show ~/Library
      command: SetFile -a v "{{ '~/Library' | expanduser }}"
      tags:
        - customize

    - include_role:
        name: defaults
        apply:
          tags:
            - customize
      tags:
        - customize

    - include_role:
        name: install_fonts_from_archive
        apply:
          tags:
            - fonts
      vars:
        font_archive_url: "{{ item }}"
      with_items: "{{ font_archives }}"
      tags:
        - fonts
