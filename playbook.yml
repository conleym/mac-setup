---
- hosts: localhost
  become: no
  connection: local
  vars_files:
      - vars.yml
      - ports.yml
      - mas.yml
      - dmgs.yml
  tasks:
      # See https://unix.stackexchange.com/questions/234104/get-osx-codename-from-command-line
      - name: Determine OS version
        command: sw_vers -productVersion
        register: sw_vers_stdout

      - set_fact:
          macos_version: "{{ sw_vers_stdout.stdout }}"
          macos_major_version: "{{ sw_vers_stdout.stdout | regex_replace('^(10\\.\\d+).*', '\\1') }}"

      - name: Determine marketing version
        shell: >-
            awk '/SOFTWARE LICENSE AGREEMENT FOR (macOS|OS X)/' '/System/Library/CoreServices/Setup Assistant.app/Contents/Resources/en.lproj/OSXSoftwareLicense.rtf' |
            awk -F '(macOS|OS X)' '{ print $NF }' |
            awk '{ gsub(/^[ \t]+|[ \t]+$/, ""); print }'
        register: awk_stdout

      - set_fact:
          macos_marketing_version: "{{ awk_stdout.stdout }}"

      - set_fact:
          downloads: "{{ '~/Downloads/setup' | expanduser }}"

      - name: Ensure downloads directory exists
        file:
          path: "{{ downloads }}"
          state: directory

        # Download and install stuff.
      - name: Install various things.
        block:
        - debug:
            msg: "Downloading to {{ downloads }}"

# TODO why is this not found on catalina?
#        - name: Download MacPorts
#          get_url:
#            url: "https://distfiles.macports.org/MacPorts/MacPorts-{{ macports_version }}-{{ macos_major_version }}-{{ macos_marketing_version }}.pkg"
#            dest: "{{ downloads }}/macports.pkg"
#            # TODO why does validation fail on catalina?
#            validate_certs: no

        - name: Install MacPorts
          command: "installer -pkg {{ downloads }}/macports.pkg -target /"
          become: yes
          args:
            creates: /opt/local/bin/port

        - name: Download and install apps from disk images
          include_role:
            name: install_app_from_dmg
          vars:
            dmg_url: "{{ item.dmg_url }}"
            dmg_destination: "{{ downloads }}/{{ item.app_name }}.dmg"
            app_name: "{{ item.app_name }}"
          with_items: "{{ dmgs_to_download_and_install }}"

      - name: List installed apps
        command: mas list
        register: mas_list_stdout

      - name: Install AppStore apps
        command: mas install "{{ item }}"
        with_items: "{{ mas_apps_to_install }}"
        when: (item | string) not in mas_list_stdout.stdout

      - name: Add MacPorts to path
        lineinfile:
          line: /opt/local/bin
          path: /etc/paths
          state: present
          insertbefore: /usr/local/bin
        become: yes

      # Install separately, since some ports require it, or at least look for it, causing prompts.
      - name: Install OpenJDK
        macports:
          selfupdate: yes
          upgrade: yes
          name: openjdk8
          state: present
        become: yes

      - name: Install ports
        macports:
          selfupdate: yes
          upgrade: yes
          name: "{{ item.key }}"
          variant: "{{ item.value }}"
          state: present
        become: yes
        with_dict: "{{ ports_to_install }}"


#      - name: Clone emacs
#        git:
#         repo: https://github.com/emacs-mirror/emacs
#         dest: ~/src/emacs
#      - name: Clone .emacs.d
#        git:
#         repo: git@github.com:conleym/dot-emacs.git
#         dest: ~/.emacs.d
#      - name: Compile emacs
#        shell: ""
